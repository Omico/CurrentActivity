// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath 'com.google.gms:google-services:4.2.0'
        classpath 'io.fabric.tools:gradle:1.28.1'
        classpath "io.realm:realm-gradle-plugin:5.11.0"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    // https://plugins.gradle.org/plugin/com.gradle.build-scan
    id "com.gradle.build-scan" version "2.3"
}

buildScan {
    setTermsOfServiceUrl("https://gradle.com/terms-of-service")
    setTermsOfServiceAgree("yes")

    // Keep this while optimizing your builds,
    // but then remove it once you're done â€” unless you want to share all future builds with Gradle.
    // If removed, you can still get build scans by using the --scan option.
    publishAlways()
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://dl.bintray.com/omico/OmicoLibrary' }
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    COMPILE_SDK_VERSION = 28

    app = [
            APPLICATION_ID    : "me.omico.currentactivity",
            MIN_SDK_VERSION   : 23,
            TARGET_SDK_VERSION: COMPILE_SDK_VERSION,
            VERSION_CODE      : getVersionCode(),
            VERSION_NAME      : getVersionName()
    ]

    library = [
            MIN_SDK_VERSION: 19
    ]
}

static int getVersionCode() {
    return readCommand('git rev-list HEAD --count').toInteger()
}

static String getVersionName() {
    return readCommand('git describe --tags --dirty')
}

static def readCommand(String cmd) {
    return cmd.execute().text.trim()
}